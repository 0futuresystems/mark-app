Task: Change the ZIP export structure used by Share Now and Sync When Home (on /send) to a per-lot folder layout. Remove the CSV. Put each lot’s media + AI description text inside that lot’s folder.

Desired Output (example)

If there are lots 01, 02, …:

01/
  01_photo_01.jpg
  01_photo_02.jpg
  01_mainVoice_01.webm
  description.txt
02/
  02_photo_01.jpg
  description.txt
...


Folder name must equal the lot number exactly (string used in the UI today).

No export.csv at all.

description.txt = the lot’s current description text (from lot.description), or the string “No description provided.” if empty.

Keep existing filename convention for media (photo/video/voice), just move under the lot folder instead of a shared media/ folder.

For Main Voice Note, ensure it’s clearly named, e.g. 01_mainVoice_01.webm (preserve current extension).

Implementation Guidance
0) Read the current export flow

Locate the code used by Share Now and Sync When Home (on /send). You’ll see logic that:

Gathers all media across lots

Writes a single export.csv

Writes every media file under a single media/ directory

Builds a ZIP blob (and for Sync, uploads)

Identify the functions that:

Build the list of zip entries (paths + blob providers)

Create the final zip (JSZip or existing helper)

Likely files:

src/lib/exportLocal.ts (or similarly named)

Components under app/(protected)/send/ (or the page component) triggering the export/sync

A zip/bundle helper (e.g., buildZipBundle)

1) Remove CSV generation

Delete/disable any call that generates or adds export.csv to the bundle.

Remove the CSV header/row building logic.

Ensure no callers rely on the CSV string return value.

2) Group entries by lot (folder per lot)

When iterating lots, gather that lot’s media items only.

Produce file paths as:
path = \${lot.number}/${fileName}``

Keep existing filename rules for media (you probably already build something like 01_photo_01.jpg, 01_mainVoice_01.webm, etc.). Only change the path prefix, not the filename itself.

Make this change for both flows:

Share Now (local ZIP download)

Sync When Home (cloud upload zip), so both produce identical structure.

3) Add description.txt per lot

For each lot, add a text entry:

Path: \${lot.number}/description.txt``

Content: lot.description || "No description provided."

Ensure the zip helper can add text files (not just blobs). If needed:

Extend the helper to accept { path, text }

Or bypass the old helper and use JSZip directly (create folder per lot, then file('description.txt', text)).

Encoding: UTF-8 plain text.

4) Keep blob streaming & memory usage sane

Reuse existing getMediaBlob(mediaItem.id) to obtain blobs lazily.

Avoid loading all blobs into memory at once; push entries as async providers if your helper supports it. If not, JSZip is fine for the typical lot sizes, but still keep it iterative.

5) Edge cases

Lot with no media: still create the folder and description.txt.

Lot number with spaces/special chars: preserve exactly (it must match the user’s lot number). If the current app already sanitizes, keep that behavior.

Missing description: write the fallback string.

Mixed media types (photo, video, mainVoice/voice): include as usual.

6) Wire up the two buttons

Share Now should download the new-format zip.

Sync When Home should upload the same-format zip to whatever storage you use now (do not change the destination logic—only change the zip content layout).

7) Minimal code changes (suggested)

Refactor the current “entries” builder into two steps:

collectLotEntries(lot) → returns an array of { path, blobProvider } for that lot’s media, plus a { path: 'description.txt', text } entry.

In the caller, loop lots and concatenate entries for the entire zip.

Update the zip builder to:

For entries with text, add a plain text file.

For entries with blobProvider, resolve and add as binary.

Acceptance Criteria

Clicking Share Now produces a zip whose top-level contains only lot-numbered folders. No media/ directory. No export.csv.

Each lot folder contains:

That lot’s media files only (filenames unchanged except for the folder).

A description.txt with the lot’s description (or fallback string).

Clicking Sync When Home uploads a zip with the same structure.

No regressions to export performance or existing UI flows.

If a lot has no media, it still has a folder with description.txt.

Lot folder names exactly match the lot numbers seen in the UI.

Testing Plan (manual)

Basic: Two lots with photos + main voice. Verify:

Two top-level folders (01/, 02/)

Each has only its own media + description.txt

No CSV: Confirm export.csv does not exist.

No media in a lot: Lot 03 only has a description → folder exists with description.txt only.

Empty description: A lot without description → description.txt = “No description provided.”

Sync flow: Run Sync When Home and inspect the uploaded zip content.

Names: Confirm filenames preserved; only folder prefix changed.

Large set: 50+ lots sanity check (no crashes, structure correct).

Deliverables

Updated export logic (likely src/lib/exportLocal.ts and any helper it uses).

Updated /send page handlers for Share Now and Sync When Home (paths & calls unchanged, only entry builder and zip content structure changed).

Brief README note: new per-lot export structure; CSV removed.

Important: Do not change any unrelated features. Keep the change scoped to export structure.